# #
# # This action will publish Chatwoot CE docker image.
# # This is set to run against merges to develop, master
# # and when tags are created.
# #

name: Publish ARM Docker
on:
  push:
    branches:
      - develop
      - master
    tags:
      - v*
# pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    env:
      GIT_REF: ${{ github.head_ref || github.ref_name }} # ref_name to get tags/branches
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: set docker tag
        run: |
          # Replace forward slashes with hyphens in the ref name
          SANITIZED_REF=$(echo "$GIT_REF" | sed 's/\//-/g')
          echo "DOCKER_TAG=r1ckjr/mcz-cw-arm:$SANITIZED_REF" >> $GITHUB_ENV

      - name: replace docker tag if master
        if: github.ref_name == 'master'
        run: |
          echo "DOCKER_TAG=r1ckjr/mcz-cw-arm:latest" >> $GITHUB_ENV

      - name: Login to DockerHub
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      # # https://github.com/docker/buildx/discussions/1382 cache build
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: docker/Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     tags: ${{ env.DOCKER_TAG }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      - name: Build and push arm64
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: RAILS_ENV=production
          file: docker/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.DOCKER_TAG }}-arm
          cache-from: type=gha
          cache-to: type=gha,mode=max